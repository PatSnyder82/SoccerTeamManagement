{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { Component, Inject } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nlet PlayerDetailsComponent = class PlayerDetailsComponent {\n  //#endregion\n  //#region Constructor\n  constructor(activatedRoute, router, http, baseUrl) {\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.errorStateMatcher = new ErrorStateMatcher();\n    const unsignedInt999Pattern = new RegExp('^[1-9]\\\\d{0,2}$');\n    this.form = new FormGroup({\n      firstName: new FormControl('', Validators.required),\n      lastName: new FormControl('', Validators.required),\n      nickName: new FormControl('', Validators.required),\n      isAdult: new FormControl('', Validators.required),\n      height: new FormControl('', [Validators.required, Validators.min(0), Validators.max(999), Validators.pattern(unsignedInt999Pattern)]),\n      weight: new FormControl('', [Validators.required, Validators.min(0), Validators.max(9999), Validators.pattern(unsignedInt999Pattern)]),\n      foot: new FormControl('', Validators.required),\n      flareRating: new FormControl('', [Validators.required, Validators.min(1), Validators.max(5)]),\n      nationId: new FormControl('', Validators.required),\n      readonly: new FormControl('true')\n      /*//Phone\r\n      countryCode: new FormControl('', Validators.required),\r\n      areaCode: new FormControl('', Validators.required),\r\n      extension: new FormControl('', Validators.required),\r\n      number: new FormControl('', Validators.required),\r\n      phoneType: new FormControl('', Validators.required),\r\n      //Address\r\n      addressLine1: new FormControl('', Validators.required),\r\n      addressLine2: new FormControl('', Validators.required),\r\n      city: new FormControl('', Validators.required),\r\n      country: new FormControl('', Validators.required),\r\n      state: new FormControl('', Validators.required),\r\n      zipCode: new FormControl('', Validators.required),\r\n      //Photo\r\n      image: new FormControl('', Validators.required),\r\n      //Nation\r\n      nation: new FormControl('', Validators.required),\r\n      //Attributes\r\n      //Teams\r\n      teams: new FormControl('', Validators.required),\r\n      positions: new FormControl('', Validators.required),\r\n      parents: new FormControl('', Validators.required),*/\n\n    });\n    this.form.disable();\n    this.form.controls['readonly'].enable();\n  } //#endregion\n  //#region Events\n\n\n  ngOnInit() {\n    this.loadCountries();\n    this.loadData();\n  }\n\n  onSubmit() {\n    var player = this.id ? this.player : {};\n    player.firstName = this.form.get(\"firstName\").value;\n    player.lastName = this.form.get(\"lastName\").value;\n    player.nickName = this.form.get(\"nickName\").value;\n    player.isAdult = this.form.get(\"isAdult\").value;\n    player.height = +this.form.get(\"height\").value;\n    player.weight = +this.form.get(\"weight\").value;\n    player.foot = this.form.get(\"foot\").value;\n    player.flareRating = +this.form.get(\"flareRating\").value;\n    player.nationId = +this.form.get(\"nationId\").value;\n    const url = this.baseUrl + \"api/players/\" + this.player.id;\n    this.http.put(url, player).subscribe(() => {\n      this.router.navigate(['/players']);\n    }, error => console.error(error));\n  } //#endregion\n  //#region Methods\n\n\n  loadCountries() {\n    // fetch all the countries from the server\n    var url = this.baseUrl + \"api/CountryLookup/\";\n    var params = new HttpParams().set(\"pageIndex\", \"0\").set(\"pageSize\", \"9999\").set(\"sortColumn\", \"SortOrder\").set(\"sortOrder\", \"ASC\");\n    this.http.get(url, {\n      params\n    }).subscribe(result => {\n      this.countries = result.data;\n    }, error => console.error(error));\n  }\n\n  loadData() {\n    // retrieve the ID from the 'id'\n    this.id = +this.activatedRoute.snapshot.paramMap.get('id');\n    var url = this.baseUrl + \"api/Players/\" + this.id;\n    this.http.get(url).subscribe(result => {\n      this.player = result;\n      this.title = \"Edit - \" + this.player.firstName + \" \" + this.player.lastName;\n      console.log(this.player);\n      this.form.patchValue(this.player);\n    }, error => console.error(error));\n  }\n\n  readonlySlideChange($event) {\n    if ($event.checked) {\n      this.form.disable();\n      this.form.controls['readonly'].enable();\n    } else {\n      this.form.enable();\n    }\n  }\n\n};\nPlayerDetailsComponent = __decorate([Component({\n  selector: 'app-player-details',\n  templateUrl: './player-details.component.html',\n  styleUrls: ['./player-details.component.scss']\n}), __param(3, Inject('BASE_URL')), __metadata(\"design:paramtypes\", [ActivatedRoute, Router, HttpClient, String])], PlayerDetailsComponent);\nexport { PlayerDetailsComponent };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { PhoneType } from '../enum/phone-type';\nimport * as i0 from \"@angular/core\";\nexport let PhonePipe = /*#__PURE__*/(() => {\n  class PhonePipe {\n    transform(phone) {\n      var _a, _b;\n\n      let value = 'None';\n\n      if (phone) {\n        value = '';\n        value += (phone === null || phone === void 0 ? void 0 : phone.phoneType) ? PhoneType[+(phone === null || phone === void 0 ? void 0 : phone.phoneType)] : '';\n        value += (phone === null || phone === void 0 ? void 0 : phone.countryCode) ? ': +' + ((_a = phone === null || phone === void 0 ? void 0 : phone.countryCode) === null || _a === void 0 ? void 0 : _a.trim()) : '';\n        value += (phone === null || phone === void 0 ? void 0 : phone.areaCode) ? ' (' + ((_b = phone === null || phone === void 0 ? void 0 : phone.areaCode) === null || _b === void 0 ? void 0 : _b.trim()) + ')' : '';\n        value += this._formatNumber(phone === null || phone === void 0 ? void 0 : phone.number.trim(), phone === null || phone === void 0 ? void 0 : phone.countryCode);\n        value += (phone === null || phone === void 0 ? void 0 : phone.extension) ? ' (extension: ' + (phone === null || phone === void 0 ? void 0 : phone.extension) + ')' : '';\n      }\n\n      return value;\n    }\n\n    _formatNumber(number, countryCode) {\n      if (!number) {\n        return '';\n      } else if (countryCode === \"1\" && number.length === 7) {\n        return ' ' + number.substring(0, 2) + '-' + number.substring(3, 6);\n      } else {\n        return ' ' + number;\n      }\n    }\n\n  }\n\n  PhonePipe.ɵfac = function PhonePipe_Factory(t) {\n    return new (t || PhonePipe)();\n  };\n\n  PhonePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"phone\",\n    type: PhonePipe,\n    pure: true\n  });\n  return PhonePipe;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PositionService } from '../../../../services/position.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"../../../../services/position.service\";\nexport let PitchPositionsModalComponent = /*#__PURE__*/(() => {\n  class PitchPositionsModalComponent {\n    //#endregion\n    //#region Constructor\n    constructor(formBuilder, dialogRef, data, positionService) {\n      this.formBuilder = formBuilder;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.positionService = positionService;\n      this.errorMessage = '';\n      this.subscriptions = new Array();\n      this.title = \"Positions\";\n    } //#endregion\n    //#region Events\n\n\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe);\n      }\n    }\n\n    ngOnInit() {\n      this.form = this._initializeFormGroup();\n\n      this._getPositions();\n\n      this.controls = this._initializeControlReferences();\n    }\n\n    onClose() {\n      this.dialogRef.close();\n    }\n\n    onSubmit() {\n      var _a;\n\n      if ((_a = this.form) === null || _a === void 0 ? void 0 : _a.valid) {\n        this.dialogRef.close({\n          data: this.form.value\n        });\n      } else {\n        this.form.markAllAsTouched();\n      }\n    } //#endregion\n    //#region Methods\n\n\n    _getPositions() {\n      if (!this.positions) {\n        this.subscriptions.push(this.positionService.getAll().subscribe(data => this.positions = data, error => this.errorMessage = error));\n      }\n    }\n\n    _initializeControlReferences() {\n      return {\n        lw: this.form.get('lw'),\n        lf: this.form.get('lf'),\n        cf: this.form.get('cf'),\n        st: this.form.get('st'),\n        rf: this.form.get('rf'),\n        rw: this.form.get('rw'),\n        cam: this.form.get('cam'),\n        lm: this.form.get('lm'),\n        cm: this.form.get('cm'),\n        rm: this.form.get('rm'),\n        lwb: this.form.get('lwb'),\n        cdm: this.form.get('cdm'),\n        rwb: this.form.get('rwb'),\n        lb: this.form.get('lb'),\n        cb: this.form.get('cb'),\n        rb: this.form.get('rb'),\n        sw: this.form.get('sw'),\n        g: this.form.get('g')\n      };\n    }\n\n    _initializeFormGroup() {\n      return this.formBuilder.group({\n        lw: [false],\n        lf: [false],\n        cf: [false],\n        st: [false],\n        rf: [false],\n        rw: [false],\n        cam: [false],\n        lm: [false],\n        cm: [false],\n        rm: [false],\n        lwb: [false],\n        cdm: [false],\n        rwb: [false],\n        lb: [false],\n        cb: [false],\n        rb: [false],\n        sw: [false],\n        g: [false]\n      });\n    }\n\n  }\n\n  PitchPositionsModalComponent.ɵfac = function PitchPositionsModalComponent_Factory(t) {\n    return new (t || PitchPositionsModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i3.PositionService));\n  };\n\n  PitchPositionsModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PitchPositionsModalComponent,\n    selectors: [[\"sm-pitch-positions-modal\"]],\n    decls: 6,\n    vars: 1,\n    consts: [[1, \"main\"], [1, \"form-group\", \"commands\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", \"value\", \"Submit\", \"color\", \"warn\", 3, \"disabled\"], [\"mat-raised-button\", \"\", \"type\", \"button\", 3, \"click\"]],\n    template: function PitchPositionsModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"section\", 1)(2, \"button\", 2);\n        i0.ɵɵtext(3, \"Update\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function PitchPositionsModalComponent_Template_button_click_4_listener() {\n          return ctx.onClose();\n        });\n        i0.ɵɵtext(5, \"Close\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", true);\n      }\n    },\n    styles: [\".main[_ngcontent-%COMP%]{background-image:url(soccer-pitch-vertical.jpg);background-repeat:no-repeat;background-size:contain;display:block;max-height:750px;max-width:500px;width:500px;height:auto}\"]\n  });\n  return PitchPositionsModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
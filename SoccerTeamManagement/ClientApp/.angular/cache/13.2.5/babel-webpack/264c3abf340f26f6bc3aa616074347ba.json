{"ast":null,"code":"import { HttpClient, HttpParams } from '@angular/common/http';\nimport { FormBuilder, FormGroup, FormGroupDirective } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/select\";\nimport * as i7 from \"@angular/material/core\";\n\nfunction AddressCreateComponent_mat_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const country_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", country_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", country_r2.text, \" \");\n  }\n}\n\nfunction AddressCreateComponent_section_16_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const state_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", state_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", state_r4.text, \" \");\n  }\n}\n\nfunction AddressCreateComponent_section_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 2)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"State:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-select\", 11);\n    i0.ɵɵtemplate(4, AddressCreateComponent_section_16_mat_option_4_Template, 2, 2, \"mat-option\", 6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"errorStateMatcher\", ctx_r1.errorStateMatcher);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.states);\n  }\n}\n\nexport let AddressCreateComponent = /*#__PURE__*/(() => {\n  class AddressCreateComponent {\n    //#endregion\n    //#region Constructor\n    constructor(activatedRoute, router, http, baseUrl, formBuilder, rootFormGroup) {\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n      this.http = http;\n      this.baseUrl = baseUrl;\n      this.formBuilder = formBuilder;\n      this.rootFormGroup = rootFormGroup;\n      this.errorStateMatcher = new ErrorStateMatcher();\n    } //#endregion\n    //#region Event\n\n\n    ngOnInit() {\n      this.address = this.rootFormGroup.control;\n\n      this._getCountries();\n    }\n\n    onCountryChange(countryId) {\n      if (countryId === 237 && this.states == null) {\n        this._getStates(countryId);\n      }\n    } //#endregion\n    //#region Methods\n    //private _createAddressFormGroup(): void {\n    //  const unsignedIntPattern = new RegExp('^[1-9]\\\\d{0,8}$');\n    //  console.log('Inside Create Address Group 1');\n    //  this.parentFormGroup.addControl('address', this.formBuilder.group({\n    //    addressLine1: ['', [Validators.required, Validators.maxLength(100)]],\n    //    addressLine2: ['', Validators.maxLength(100)],\n    //    city: ['', [Validators.required, Validators.maxLength(100)]],\n    //    countryId: ['', Validators.required],\n    //    stateId: ['', Validators.required],\n    //    zipCode: ['', Validators.pattern(unsignedIntPattern)]\n    //  }));\n    //  console.log('Inside Create Address Group 2');\n    //}\n\n\n    _getCountries() {\n      var url = this.baseUrl + \"api/Country/\";\n      var params = new HttpParams().set(\"pageIndex\", \"0\").set(\"pageSize\", \"9999\").set(\"sortColumn\", \"SortOrder\").set(\"sortOrder\", \"ASC\");\n      this.http.get(url, {\n        params\n      }).subscribe(result => {\n        this.countries = result.data;\n      }, error => console.error(error));\n    }\n\n    _getStates(countryId) {\n      // fetch all states for the specified country\n      var url = this.baseUrl + \"api/State/getstatesbycountry/\" + countryId;\n      ;\n      this.http.get(url).subscribe(result => {\n        this.states = result;\n      }, error => console.error(error));\n    }\n\n  }\n\n  AddressCreateComponent.ɵfac = function AddressCreateComponent_Factory(t) {\n    return new (t || AddressCreateComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i3.FormGroupDirective));\n  };\n\n  AddressCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddressCreateComponent,\n    selectors: [[\"sm-address-create\"]],\n    decls: 25,\n    vars: 8,\n    consts: [[3, \"formGroup\"], [\"formGroupName\", \"address\"], [1, \"form-group\"], [\"matInput\", \"\", \"formControlName\", \"addressLine1\", 1, \"form-control\", 3, \"errorStateMatcher\"], [\"matInput\", \"\", \"formControlName\", \"addressLine2\", 1, \"form-control\", 3, \"errorStateMatcher\"], [\"formControlName\", \"countryId\", 1, \"form-control\", 3, \"errorStateMatcher\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"form-group\", 4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"city\", 1, \"form-control\", 3, \"errorStateMatcher\"], [\"matInput\", \"\", \"formControlName\", \"zipCode\", 1, \"form-control\", 3, \"errorStateMatcher\"], [3, \"value\"], [\"formControlName\", \"stateId\", 1, \"form-control\", 3, \"errorStateMatcher\"]],\n    template: function AddressCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"section\", 1)(2, \"section\", 2)(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Address Line 1:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6, \" form.controls.address.get( \");\n        i0.ɵɵelementStart(7, \"section\", 2)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Address Line 2:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"section\", 2)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Country:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-select\", 5);\n        i0.ɵɵlistener(\"selectionChange\", function AddressCreateComponent_Template_mat_select_selectionChange_14_listener($event) {\n          return ctx.onCountryChange($event.value);\n        });\n        i0.ɵɵtemplate(15, AddressCreateComponent_mat_option_15_Template, 2, 2, \"mat-option\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(16, AddressCreateComponent_section_16_Template, 5, 2, \"section\", 7);\n        i0.ɵɵelementStart(17, \"section\", 2)(18, \"mat-label\");\n        i0.ɵɵtext(19, \"City:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"section\", 2)(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Zip Code:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 9);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"errorStateMatcher\", ctx.errorStateMatcher);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"errorStateMatcher\", ctx.errorStateMatcher);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"errorStateMatcher\", ctx.errorStateMatcher);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.countries);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.address.get(\"countryId\").value === 237);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"errorStateMatcher\", ctx.errorStateMatcher);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"errorStateMatcher\", ctx.errorStateMatcher);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormGroupName, i4.MatLabel, i5.MatInput, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i6.MatSelect, i7.MatOption],\n    styles: [\"\"]\n  });\n  return AddressCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { BaseService } from './base.service';\nimport { CountryService } from './country.service';\nimport { StateService } from './state.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"./state.service\";\nimport * as i4 from \"./country.service\";\nexport let PhoneService = /*#__PURE__*/(() => {\n  class PhoneService extends BaseService {\n    constructor(formBuilder, http, baseUrl, stateService, countryService) {\n      super(http, 'phone/', baseUrl);\n      this.formBuilder = formBuilder;\n      this.baseUrl = baseUrl;\n      this.stateService = stateService;\n      this.countryService = countryService;\n    }\n\n    getFormGroup() {\n      const unsignedIntPattern = new RegExp('^[1-9]\\\\d{0,8}$');\n      return this.formBuilder.group({\n        id: [0],\n        countryCode: ['', [Validators.required, Validators.maxLength(10), Validators.pattern(unsignedIntPattern)]],\n        areaCode: ['', [Validators.maxLength(10), Validators.pattern(unsignedIntPattern)]],\n        extension: ['', [Validators.maxLength(10), Validators.pattern(unsignedIntPattern)]],\n        number: ['', [Validators.required, Validators.maxLength(20), Validators.pattern(unsignedIntPattern)]],\n        phoneType: [1, [Validators.required]]\n      });\n    }\n\n  }\n\n  PhoneService.ɵfac = function PhoneService_Factory(t) {\n    return new (t || PhoneService)(i0.ɵɵinject(i1.FormBuilder), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject('BASE_URL'), i0.ɵɵinject(i3.StateService), i0.ɵɵinject(i4.CountryService));\n  };\n\n  PhoneService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PhoneService,\n    factory: PhoneService.ɵfac,\n    providedIn: 'root'\n  });\n  return PhoneService;\n})();","map":null,"metadata":{},"sourceType":"module"}
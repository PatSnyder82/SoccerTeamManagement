{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { Component, Inject, ViewChild } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { PlayerService } from '../../../../services/player.service';\nlet PlayerListComponent = class PlayerListComponent {\n  //#endregion\n  //#region Constructor\n  constructor(http, baseUrl, playerService) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.playerService = playerService;\n    this.displayedColumns = ['id', 'firstName', 'lastName', 'country'];\n    this.subscriptions = new Array();\n  } //#endregion\n  //#region Events\n\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.forEach(subscription => subscription.unsubscribe);\n    }\n  }\n\n  ngOnInit() {\n    this.initialize();\n  }\n\n  onFilterTextChanged(filterText) {\n    if (this.filterTextChanged.observers.length === 0) {\n      this.subscriptions.push(this.filterTextChanged.pipe(debounceTime(1000), distinctUntilChanged()).subscribe(query => {\n        this.loadData(query);\n      }));\n    }\n\n    this.filterTextChanged.next(filterText);\n  } //#endregion\n  //#region Methods\n\n\n  getData(event) {\n    let pageIndex = +event.pageIndex;\n    let pageSize = +event.pageSize;\n    let sortColumn = this.sort ? this.sort.active : this.defaultSortColumn;\n    let sortOrder = this.sort ? this.sort.direction : this.defaultSortOrder;\n    let filterColumn = this.defaultFilterColumn;\n    let filterQuery = this.filterQuery;\n    this.subscriptions.push(this.playerService.getTableData(pageIndex, pageSize, sortColumn, sortOrder, filterColumn, filterQuery).subscribe(tableData => {\n      this.paginator.length = tableData.totalCount;\n      this.paginator.pageIndex = tableData.pageIndex;\n      this.paginator.pageSize = tableData.pageSize;\n      this.players = new MatTableDataSource(tableData.data);\n    }, error => this.errorMessage = error));\n  }\n\n  initialize() {\n    this.defaultPageIndex = 0;\n    this.defaultPageSize = 10;\n    this.defaultSortColumn = \"id\";\n    this.defaultSortOrder = \"asc\";\n    this.defaultFilterColumn = \"lastname\";\n    this.filterQuery = '';\n    this.filterTextChanged = new Subject();\n    this.loadData(null);\n  }\n\n  loadData(query = null) {\n    var pageEvent = new PageEvent();\n    pageEvent.pageIndex = this.defaultPageIndex;\n    pageEvent.pageSize = this.defaultPageSize;\n    query = !query ? '' : query;\n    this.filterQuery = query;\n    this.getData(pageEvent);\n  }\n\n  setParameters(event) {\n    return new HttpParams().set(\"pageIndex\", event.pageIndex.toString()).set(\"pageSize\", event.pageSize.toString()).set(\"sortColumn\", this.sort ? this.sort.active : this.defaultSortColumn).set(\"sortOrder\", this.sort ? this.sort.direction : this.defaultSortOrder);\n  }\n\n};\n\n__decorate([ViewChild(MatPaginator, {\n  static: false\n}), __metadata(\"design:type\", MatPaginator)], PlayerListComponent.prototype, \"paginator\", void 0);\n\n__decorate([ViewChild(MatSort, {\n  static: false\n}), __metadata(\"design:type\", MatSort)], PlayerListComponent.prototype, \"sort\", void 0);\n\nPlayerListComponent = __decorate([Component({\n  selector: 'sm-player-list',\n  templateUrl: './player-list.component.html',\n  styleUrls: ['./player-list.component.scss']\n}), __param(1, Inject('BASE_URL')), __metadata(\"design:paramtypes\", [HttpClient, String, PlayerService])], PlayerListComponent);\nexport { PlayerListComponent };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { Component, Inject } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PositionService } from '../../../../services/position.service';\nlet PitchPositionsModalComponent = class PitchPositionsModalComponent {\n  //#endregion\n  //#region Constructor\n  constructor(formBuilder, dialogRef, data, positionService) {\n    this.formBuilder = formBuilder;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.positionService = positionService;\n    this.errorMessage = '';\n    this.subscriptions = new Array();\n    this.title = \"Positions\";\n  } //#endregion\n  //#region Events\n\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.forEach(subscription => subscription.unsubscribe);\n    }\n  }\n\n  ngOnInit() {\n    this.form = this._initializeFormGroup();\n\n    this._getPositions();\n\n    this.controls = this._initializeControlReferences();\n  }\n\n  onClose() {\n    console.log(\"Value LF: \" + JSON.stringify(this.controls.lf.value, null, 2));\n    console.log(\"Value RF: \" + JSON.stringify(this.controls.rf.value, null, 2));\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    var _a;\n\n    console.log(\"Value LF: \" + JSON.stringify(this.controls.lf.value, null, 2));\n\n    if ((_a = this.form) === null || _a === void 0 ? void 0 : _a.valid) {\n      let playerPositions = this.data;\n      this.dialogRef.close({\n        data: this.form.value\n      });\n    } else {\n      this.form.markAllAsTouched();\n    }\n  } //#endregion\n  //#region Methods\n\n\n  _getPositions() {\n    if (!this.positions) {\n      this.subscriptions.push(this.positionService.getAll().subscribe(data => this.positions = data, error => this.errorMessage = error));\n    }\n  }\n\n  _getPositionsFromPlayerPositions(playerPositions) {\n    playerPositions.forEach(x => x);\n  }\n\n  _initializeControlReferences() {\n    return {\n      lw: this.form.get('lw'),\n      lf: this.form.get('lf'),\n      cf: this.form.get('cf'),\n      st: this.form.get('st'),\n      rf: this.form.get('rf'),\n      rw: this.form.get('rw'),\n      cam: this.form.get('cam'),\n      lm: this.form.get('lm'),\n      cm: this.form.get('cm'),\n      rm: this.form.get('rm'),\n      lwb: this.form.get('lwb'),\n      cdm: this.form.get('cdm'),\n      rwb: this.form.get('rwb'),\n      lb: this.form.get('lb'),\n      cb: this.form.get('cb'),\n      rb: this.form.get('rb'),\n      sw: this.form.get('sw'),\n      g: this.form.get('g')\n    };\n  }\n\n  _initializeFormGroup() {\n    return this.formBuilder.group({\n      lw: [false],\n      lf: [false],\n      cf: [false],\n      st: [false],\n      rf: [false],\n      rw: [false],\n      cam: [false],\n      lm: [false],\n      cm: [false],\n      rm: [false],\n      lwb: [false],\n      cdm: [false],\n      rwb: [false],\n      lb: [false],\n      cb: [false],\n      rb: [false],\n      sw: [false],\n      g: [false]\n    });\n  }\n\n};\nPitchPositionsModalComponent = __decorate([Component({\n  selector: 'sm-pitch-positions-modal',\n  templateUrl: './pitch-positions-modal.component.html',\n  styleUrls: ['./pitch-positions-modal.component.scss']\n}), __param(2, Inject(MAT_DIALOG_DATA)), __metadata(\"design:paramtypes\", [FormBuilder, MatDialogRef, Array, PositionService])], PitchPositionsModalComponent);\nexport { PitchPositionsModalComponent };","map":null,"metadata":{},"sourceType":"module"}
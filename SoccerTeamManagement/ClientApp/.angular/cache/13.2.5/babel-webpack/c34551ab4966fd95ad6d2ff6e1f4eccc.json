{"ast":null,"code":"import { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PositionService } from '../../../../services/position.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"../../../../services/position.service\";\nimport * as i4 from \"../../../shared/checkbox/checkbox.component\";\nexport let PitchPositionsModalComponent = /*#__PURE__*/(() => {\n  class PitchPositionsModalComponent {\n    //#endregion\n    //#region Constructor\n    constructor(formBuilder, dialogRef, data, positionService) {\n      this.formBuilder = formBuilder;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.positionService = positionService;\n      this.errorMessage = '';\n      this.subscriptions = new Array();\n      this.title = \"Positions\";\n    } //#endregion\n    //#region Events\n\n\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe);\n      }\n    }\n\n    ngOnInit() {\n      this.form = this._initializeFormGroup();\n\n      this._getPositions();\n\n      this.controls = this._initializeControlReferences();\n    }\n\n    onClose() {\n      this.dialogRef.close();\n    }\n\n    onSubmit() {\n      var _a;\n\n      if ((_a = this.form) === null || _a === void 0 ? void 0 : _a.valid) {\n        this.dialogRef.close({\n          data: this.form.value\n        });\n      } else {\n        this.form.markAllAsTouched();\n      }\n    } //#endregion\n    //#region Methods\n\n\n    _getPositions() {\n      if (!this.positions) {\n        this.subscriptions.push(this.positionService.getAll().subscribe(data => this.positions = data, error => this.errorMessage = error));\n      }\n    }\n\n    _initializeControlReferences() {\n      return {\n        lw: this.form.get('lw'),\n        lf: this.form.get('lf'),\n        cf: this.form.get('cf'),\n        st: this.form.get('st'),\n        rf: this.form.get('rf'),\n        rw: this.form.get('rw'),\n        cam: this.form.get('cam'),\n        lm: this.form.get('lm'),\n        cm: this.form.get('cm'),\n        rm: this.form.get('rm'),\n        lwb: this.form.get('lwb'),\n        cdm: this.form.get('cdm'),\n        rwb: this.form.get('rwb'),\n        lb: this.form.get('lb'),\n        cb: this.form.get('cb'),\n        rb: this.form.get('rb'),\n        sw: this.form.get('sw'),\n        g: this.form.get('g')\n      };\n    }\n\n    _initializeFormGroup() {\n      return this.formBuilder.group({\n        lw: [false],\n        lf: [false],\n        cf: [false],\n        st: [false],\n        rf: [false],\n        rw: [false],\n        cam: [false],\n        lm: [false],\n        cm: [false],\n        rm: [false],\n        lwb: [false],\n        cdm: [false],\n        rwb: [false],\n        lb: [false],\n        cb: [false],\n        rb: [false],\n        sw: [false],\n        g: [false]\n      });\n    }\n\n  }\n\n  PitchPositionsModalComponent.ɵfac = function PitchPositionsModalComponent_Factory(t) {\n    return new (t || PitchPositionsModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i3.PositionService));\n  };\n\n  PitchPositionsModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PitchPositionsModalComponent,\n    selectors: [[\"sm-pitch-positions-modal\"]],\n    decls: 75,\n    vars: 1,\n    consts: [[1, \"main\"], [1, \"row\"], [1, \"col-1\", \"offset-3\"], [1, \"col-1\", \"offset-1\"], [1, \"col-1\"], [1, \"col-1\", \"offset-1\", \"double\"], [1, \"col-1\", \"offset-8\"], [1, \"col-2\", \"offset-5\", \"double\"], [1, \"col-2\", \"offset-1\", \"double\"], [1, \"col-2\", \"offset-3\", \"double\"], [1, \"col-1\", \"offset-2\"], [1, \"col-2\", \"offset-2\", \"double\"], [1, \"form-group\", \"commands\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", \"value\", \"Submit\", \"color\", \"warn\", 3, \"disabled\"], [\"mat-raised-button\", \"\", \"type\", \"button\", 3, \"click\"]],\n    template: function PitchPositionsModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"sm-checkbox\");\n        i0.ɵɵtext(4, \"LF\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"sm-checkbox\");\n        i0.ɵɵtext(7, \"CF\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 4)(9, \"sm-checkbox\");\n        i0.ɵɵtext(10, \"ST\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 3)(12, \"sm-checkbox\");\n        i0.ɵɵtext(13, \"RF\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(14, \"div\", 1);\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"div\", 5)(17, \"sm-checkbox\");\n        i0.ɵɵtext(18, \"LW\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 6)(20, \"sm-checkbox\");\n        i0.ɵɵtext(21, \"RW\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(22, \"div\", 1);\n        i0.ɵɵelementStart(23, \"div\", 1)(24, \"div\", 7)(25, \"sm-checkbox\");\n        i0.ɵɵtext(26, \"CAM\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(27, \"div\", 1);\n        i0.ɵɵelementStart(28, \"div\", 1)(29, \"div\", 2)(30, \"sm-checkbox\");\n        i0.ɵɵtext(31, \"LM\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 8)(33, \"sm-checkbox\");\n        i0.ɵɵtext(34, \"CM\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 3)(36, \"sm-checkbox\");\n        i0.ɵɵtext(37, \"RM\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(38, \"div\", 1);\n        i0.ɵɵelementStart(39, \"div\", 1)(40, \"div\", 3)(41, \"sm-checkbox\");\n        i0.ɵɵtext(42, \"LWB\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(43, \"div\", 9)(44, \"sm-checkbox\");\n        i0.ɵɵtext(45, \"CDM\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(46, \"div\", 2)(47, \"sm-checkbox\");\n        i0.ɵɵtext(48, \"RWB\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(49, \"div\", 1);\n        i0.ɵɵelementStart(50, \"div\", 1)(51, \"div\", 10)(52, \"sm-checkbox\");\n        i0.ɵɵtext(53, \"LB\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(54, \"div\", 11)(55, \"sm-checkbox\");\n        i0.ɵɵtext(56, \"CB\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(57, \"div\", 10)(58, \"sm-checkbox\");\n        i0.ɵɵtext(59, \"RB\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(60, \"div\", 1);\n        i0.ɵɵelementStart(61, \"div\", 1)(62, \"div\", 7)(63, \"sm-checkbox\");\n        i0.ɵɵtext(64, \"SW\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(65, \"div\", 1);\n        i0.ɵɵelementStart(66, \"div\", 1)(67, \"div\", 7)(68, \"sm-checkbox\");\n        i0.ɵɵtext(69, \"G\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(70, \"section\", 12)(71, \"button\", 13);\n        i0.ɵɵtext(72, \"Update\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function PitchPositionsModalComponent_Template_button_click_73_listener() {\n          return ctx.onClose();\n        });\n        i0.ɵɵtext(74, \"Close\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(71);\n        i0.ɵɵproperty(\"disabled\", true);\n      }\n    },\n    directives: [i4.CheckboxComponent],\n    styles: [\".main[_ngcontent-%COMP%]{background-image:url(soccer-pitch-vertical.jpg);background-repeat:no-repeat;background-size:contain;display:block;max-height:750px;max-width:500px;width:auto;height:750px;padding-top:100px}div[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{margin-bottom:30px}div[_ngcontent-%COMP%]   [class^=col][_ngcontent-%COMP%]{padding-left:6px}div[_ngcontent-%COMP%]   .double[_ngcontent-%COMP%]{padding-left:26px}\"]\n  });\n  return PitchPositionsModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"checkbox\"];\n\nconst _c1 = function (a0) {\n  return {\n    \"three-letters\": a0\n  };\n};\n\nexport let CheckboxComponent = /*#__PURE__*/(() => {\n  class CheckboxComponent {\n    //#endregion\n    //#region Constructor\n    constructor() {\n      this._onChange = isChecked => {};\n\n      this._onTouched = () => {};\n\n      this.isChecked = false;\n      this.isDisabled = false;\n      this.isTouched = false;\n    } //#endregion\n    //#region ControlValueAccessor Implementation\n\n\n    writeValue(checked) {\n      this.isChecked = checked;\n    }\n\n    registerOnChange(onChange) {\n      this._onChange = onChange;\n    }\n\n    registerOnTouched(onTouched) {\n      this._onTouched = onTouched;\n    }\n\n    setDisabledState(isDisabled) {\n      this.isDisabled = isDisabled;\n    } //#endregion\n    //#region Events\n\n\n    onClick(isChecked) {\n      console.log(\"Inside onClick -> isChecked parameter = \" + JSON.stringify(isChecked, null, 2));\n\n      this._markAsTouched();\n\n      if (!this.isDisabled) {\n        this.isChecked = isChecked;\n\n        this._onChange(isChecked);\n      }\n    } //#endregion\n    //#region Methods\n\n\n    _markAsTouched() {\n      if (!this.isTouched) {\n        this._onTouched();\n\n        this.isTouched = true;\n      }\n    }\n\n  }\n\n  CheckboxComponent.ɵfac = function CheckboxComponent_Factory(t) {\n    return new (t || CheckboxComponent)();\n  };\n\n  CheckboxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CheckboxComponent,\n    selectors: [[\"sm-checkbox\"]],\n    viewQuery: function CheckboxComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.checkBoxElementRef = _t.first);\n      }\n    },\n    inputs: {\n      text: \"text\",\n      color: \"color\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: CheckboxComponent\n    }])],\n    decls: 6,\n    vars: 4,\n    consts: [[1, \"container\"], [3, \"ngClass\"], [1, \"round\"], [\"type\", \"checkbox\", \"checked\", \"\", \"id\", \"checkbox\", 3, \"click\"], [\"for\", \"checkbox\"]],\n    template: function CheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"input\", 3);\n        i0.ɵɵlistener(\"click\", function CheckboxComponent_Template_input_click_4_listener($event) {\n          return ctx.onClick($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"label\", 4);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, ctx.text.length === 3));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.text);\n      }\n    },\n    directives: [i1.NgClass],\n    styles: [\"p[_ngcontent-%COMP%]{width:23px;text-align:center;margin:0 0 0 1px;font-family:Calibri;font-weight:700;color:#000;font-size:16px}p.three-letters[_ngcontent-%COMP%]{margin-left:-3px}.container[_ngcontent-%COMP%]{padding:0}.round[_ngcontent-%COMP%]{position:relative}.round[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{background-color:#fff;border:1px solid #ccc;border-radius:50%;cursor:pointer;height:25px;left:0;position:absolute;top:0;width:25px}.round[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]:after{border:2px solid #fff;border-top:none;border-right:none;content:\\\"\\\";height:6px;left:7px;opacity:0;position:absolute;top:8px;transform:rotate(-45deg);width:12px}.round[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{visibility:hidden}.round[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%]{background-color:#66aebb;border-color:#66aebb}.round[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%]:after{opacity:1}.container[_ngcontent-%COMP%]{margin:0 auto}\"]\n  });\n  return CheckboxComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
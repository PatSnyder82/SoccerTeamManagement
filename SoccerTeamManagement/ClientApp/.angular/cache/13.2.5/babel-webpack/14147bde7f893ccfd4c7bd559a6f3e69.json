{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AddressService } from './address.service';\nimport { BaseService } from './base.service';\nimport { CountryService } from './country.service';\nimport { ImageService } from './image.service';\nimport { PhoneService } from './phone.service';\nimport { PlayerPositionService } from './player-position.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./address.service\";\nimport * as i4 from \"./country.service\";\nimport * as i5 from \"./image.service\";\nimport * as i6 from \"./phone.service\";\nimport * as i7 from \"./player-position.service\";\nexport let PlayerService = /*#__PURE__*/(() => {\n  class PlayerService extends BaseService {\n    constructor(http, baseUrl, formBuilder, addressService, countryService, imageService, phoneService, playerService, playerPositionService) {\n      super(http, 'players/', baseUrl);\n      this.baseUrl = baseUrl;\n      this.formBuilder = formBuilder;\n      this.addressService = addressService;\n      this.countryService = countryService;\n      this.imageService = imageService;\n      this.phoneService = phoneService;\n      this.playerService = playerService;\n      this.playerPositionService = playerPositionService;\n    }\n\n    getFormGroup() {\n      const unsignedInt999Pattern = new RegExp('^[1-9]\\\\d{0,2}$');\n      const unsignedIntPattern = new RegExp('^[1-9]\\\\d{0,8}$');\n      return this.formBuilder.group({\n        id: [0],\n        firstName: ['', [Validators.required, Validators.maxLength(100)]],\n        lastName: ['', [Validators.required, Validators.maxLength(100)]],\n        nickName: ['', [Validators.maxLength(100)]],\n        height: [null, [Validators.min(0), Validators.max(999), Validators.pattern(unsignedInt999Pattern)]],\n        weight: [null, [Validators.min(0), Validators.max(9999), Validators.pattern(unsignedInt999Pattern)]],\n        foot: [1, [Validators.required]],\n        weakFootRating: [1, [Validators.required]],\n        flareRating: [1, [Validators.required]],\n        countryId: [null, [Validators.required]],\n        dateOfBirth: [null, [Validators.required]],\n        attributesId: [null],\n        imageId: [null],\n        phoneId: [null],\n        phone: this.phoneService.getFormGroup(),\n        addressId: [null],\n        address: this.addressService.getFormGroup(),\n        positions: [null],\n        image: [null],\n        attributes: [null],\n        teams: [null],\n        parents: [null] //TODO: this.parentService.getFormGroup()\n\n      });\n    }\n\n  }\n\n  PlayerService.ɵfac = function PlayerService_Factory(t) {\n    return new (t || PlayerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'), i0.ɵɵinject(i2.FormBuilder), i0.ɵɵinject(i3.AddressService), i0.ɵɵinject(i4.CountryService), i0.ɵɵinject(i5.ImageService), i0.ɵɵinject(i6.PhoneService), i0.ɵɵinject(PlayerService), i0.ɵɵinject(i7.PlayerPositionService));\n  };\n\n  PlayerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PlayerService,\n    factory: PlayerService.ɵfac,\n    providedIn: 'root'\n  });\n  return PlayerService;\n})();","map":null,"metadata":{},"sourceType":"module"}
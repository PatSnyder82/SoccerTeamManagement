{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Component, Inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nlet AddressCreateComponent = class AddressCreateComponent {\n  //#endregion\n  constructor(activatedRoute, router, http, baseUrl, formBuilder) {\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.formBuilder = formBuilder;\n    this.errorStateMatcher = new ErrorStateMatcher();\n    this.form = this.CreateAddressGroup();\n  } //#region Event\n\n\n  ngOnInit() {\n    this._initialize();\n\n    this._getCountries();\n  }\n\n  onCountryChange(countryId) {\n    if (countryId === 237 && this.states === null) {\n      this._getStates(countryId);\n    }\n  } //#endregion\n  //#region Methods\n\n\n  CreateAddressGroup() {\n    const unsignedIntPattern = new RegExp('^[1-9]\\\\d{0,8}$');\n    const form = this.formBuilder.group({\n      addressLine1: ['', [Validators.required, Validators.maxLength(100)]],\n      addressLine2: ['', Validators.maxLength(100)],\n      city: ['', [Validators.required, Validators.maxLength(100)]],\n      countryId: ['', Validators.required],\n      stateId: ['', Validators.required],\n      zipCode: ['', Validators.pattern(unsignedIntPattern)]\n    });\n    return form;\n  }\n\n  _getCountries() {\n    var url = this.baseUrl + \"api/Country/\";\n    var params = new HttpParams().set(\"pageIndex\", \"0\").set(\"pageSize\", \"9999\").set(\"sortColumn\", \"SortOrder\").set(\"sortOrder\", \"ASC\");\n    this.http.get(url, {\n      params\n    }).subscribe(result => {\n      this.countries = result.data;\n    }, error => console.error(error));\n  }\n\n  _getStates(countryId) {\n    // fetch all states for the specified country\n    var url = this.baseUrl + \"api/State/getstatesbycountry/\" + countryId;\n    ;\n    this.http.get(url).subscribe(result => {\n      this.states = result;\n    }, error => console.error(error));\n  }\n\n  _initialize() {}\n\n};\nAddressCreateComponent = __decorate([Component({\n  selector: 'sm-address-create',\n  templateUrl: './address-create.component.html',\n  styleUrls: ['./address-create.component.scss']\n}), __param(3, Inject('BASE_URL')), __metadata(\"design:paramtypes\", [ActivatedRoute, Router, HttpClient, String, FormBuilder])], AddressCreateComponent);\nexport { AddressCreateComponent };","map":null,"metadata":{},"sourceType":"module"}
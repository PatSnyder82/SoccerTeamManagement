{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ImageService = /*#__PURE__*/(() => {\n  class ImageService {\n    constructor(http, baseUrl) {\n      this.http = http;\n      this.baseUrl = baseUrl;\n      this.api = 'api/';\n      this.version = ''; //TODO: update backend API to include version 'v1/' in url path\n\n      this.endpoint = 'images/';\n      this.url = this.baseUrl + this.api + this.version + this.endpoint;\n    }\n\n    create(image, file) {\n      let formData = new FormData();\n      formData.append('file', file);\n      formData.append('image', JSON.stringify(image));\n      return this.http.post(this.url, formData).pipe(catchError(this.handleError));\n    }\n\n    delete(id) {\n      return this.http.delete(this.url + id.toString()).pipe(catchError(this.handleError));\n    }\n\n    handleError(err) {\n      return throwError(err.message || \"server error\");\n    }\n\n  }\n\n  ImageService.ɵfac = function ImageService_Factory(t) {\n    return new (t || ImageService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n  };\n\n  ImageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ImageService,\n    factory: ImageService.ɵfac,\n    providedIn: 'root'\n  });\n  return ImageService;\n})();","map":null,"metadata":{},"sourceType":"module"}
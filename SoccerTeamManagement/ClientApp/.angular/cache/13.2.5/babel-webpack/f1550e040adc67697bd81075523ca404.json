{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BaseService } from './base.service';\nimport { PositionCategoryService } from './position-category.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"./position-category.service\";\nexport let PositionService = /*#__PURE__*/(() => {\n  class PositionService extends BaseService {\n    constructor(formBuilder, http, baseUrl, positionCategoryService) {\n      super(http, 'position/', baseUrl);\n      this.formBuilder = formBuilder;\n      this.baseUrl = baseUrl;\n      this.positionCategoryService = positionCategoryService;\n    }\n\n    getFormGroup() {\n      return this.formBuilder.group({\n        id: [0],\n        category: [null],\n        isDisabled: [false],\n        isPrimary: [false],\n        sortOrder: [null],\n        text: [null, [Validators.required]],\n        value: [null, [Validators.required]],\n        abbreviation: [null, [Validators.required]],\n        positionCategoryId: [null, [Validators.required]],\n        positionCategory: this.positionCategoryService.getFormGroup()\n      });\n    }\n\n    toPlayerPositions(positions, playerId) {\n      let playerPositions = []; //const playerId = this.form.get('id').value;\n\n      if (positions && positions.length > 0) {\n        positions.forEach(position => {\n          const playerPosition = {};\n          playerPosition.abbreviation = position.abbreviation;\n          playerPosition.isPrimary = position.isPrimary;\n          playerPosition.positionId = position.id;\n          playerPosition.playerId = playerId;\n          playerPositions.push(playerPosition);\n        });\n      }\n\n      return playerPositions;\n    }\n\n    toPositions(playerPositions) {\n      let positions = [];\n      console.log(\"toPositions in Position Service => PlayerPositions passed in 1: \" + JSON.stringify(playerPositions, null, 2));\n\n      if (playerPositions) {\n        console.log(\"Hit here\");\n        playerPositions.forEach(playerPosition => {\n          let position = {};\n          position = playerPosition.position;\n          positions.push(position);\n        });\n      }\n\n      console.log(\"toPositions in Position Service => Positions passed in 2: \" + JSON.stringify(positions, null, 2));\n      return positions;\n    }\n\n  }\n\n  PositionService.ɵfac = function PositionService_Factory(t) {\n    return new (t || PositionService)(i0.ɵɵinject(i1.FormBuilder), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject('BASE_URL'), i0.ɵɵinject(i3.PositionCategoryService));\n  };\n\n  PositionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PositionService,\n    factory: PositionService.ɵfac,\n    providedIn: 'root'\n  });\n  return PositionService;\n})();","map":null,"metadata":{},"sourceType":"module"}
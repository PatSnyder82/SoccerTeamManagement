{"ast":null,"code":"import { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PositionService } from '../../../../services/position.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"../../../../services/position.service\";\nimport * as i4 from \"../../../shared/checkbox/checkbox.component\";\nexport let PitchPositionsModalComponent = /*#__PURE__*/(() => {\n  class PitchPositionsModalComponent {\n    //#endregion\n    //#region Constructor\n    constructor(formBuilder, dialogRef, data, positionService) {\n      this.formBuilder = formBuilder;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.positionService = positionService;\n      this.errorMessage = '';\n      this.playerPositions = data ? data : [];\n      this.subscriptions = new Array();\n      this.title = \"Positions\";\n    } //#endregion\n    //#region Events\n\n\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe);\n      }\n    }\n\n    ngOnInit() {\n      this.form = this._initializeFormGroup();\n\n      this._intializeFormGroupValues();\n\n      this._getPositions();\n\n      this.controls = this._initializeControlReferences();\n    }\n\n    onClick(controlName) {\n      //Get the inverse of the value since this click event is hit before the new value is\n      //assigned in the underlying checkbox click event.\n      const isChecked = !this.form.get(controlName).value;\n      const position = this.positions.find(position => position.abbreviation.toLowerCase() === controlName);\n\n      if (isChecked && position) {\n        this._addPosition(position);\n      } else if (!isChecked && position) {\n        this._removePosition(position);\n      }\n    }\n\n    onClose() {\n      this.dialogRef.close();\n    }\n\n    onSubmit() {\n      var _a;\n\n      if ((_a = this.form) === null || _a === void 0 ? void 0 : _a.valid) {\n        this.dialogRef.close({\n          data: this.playerPositions\n        });\n      } else {\n        this.form.markAllAsTouched();\n      }\n    } //#endregion\n    //#region Methods\n\n\n    _addPosition(position) {\n      if (!this._playerHasPosition(position)) {\n        this.playerPositions.push(position);\n      }\n    }\n\n    _removePosition(position) {\n      if (this._playerHasPosition(position)) {\n        this.playerPositions = this.playerPositions.filter(pp => pp.id === position.id);\n      }\n    }\n\n    _playerHasPosition(position) {\n      if (this.playerPositions === undefined || this.playerPositions.length < 0) {\n        return false;\n      }\n\n      if (Array.from(this.playerPositions).find(x => x.id === position.id)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    _getPositions() {\n      if (!this.positions) {\n        this.subscriptions.push(this.positionService.getAll().subscribe(data => this.positions = data, error => this.errorMessage = error));\n      }\n    }\n\n    _initializeControlReferences() {\n      return {\n        lw: this.form.get('lw'),\n        lf: this.form.get('lf'),\n        cf: this.form.get('cf'),\n        st: this.form.get('st'),\n        rf: this.form.get('rf'),\n        rw: this.form.get('rw'),\n        cam: this.form.get('cam'),\n        lm: this.form.get('lm'),\n        cm: this.form.get('cm'),\n        rm: this.form.get('rm'),\n        lwb: this.form.get('lwb'),\n        cdm: this.form.get('cdm'),\n        rwb: this.form.get('rwb'),\n        lb: this.form.get('lb'),\n        cb: this.form.get('cb'),\n        rb: this.form.get('rb'),\n        sw: this.form.get('sw'),\n        g: this.form.get('g')\n      };\n    }\n\n    _initializeFormGroup() {\n      return this.formBuilder.group({\n        lw: [false],\n        lf: [false],\n        cf: [false],\n        st: [false],\n        rf: [false],\n        rw: [false],\n        cam: [false],\n        lm: [false],\n        cm: [false],\n        rm: [false],\n        lwb: [false],\n        cdm: [false],\n        rwb: [false],\n        lb: [false],\n        cb: [false],\n        rb: [false],\n        sw: [false],\n        g: [false]\n      });\n    }\n\n    _intializeFormGroupValues() {\n      console.log(\"Player Positions in Pitch _intializeFormGroupValues: \" + JSON.stringify(this.playerPositions, null, 2));\n\n      if (this.playerPositions && this.playerPositions.length > 0) {\n        this.playerPositions.forEach(position => this.form.get(position.abbreviation.toLowerCase()).setValue(true));\n      }\n    }\n\n  }\n\n  PitchPositionsModalComponent.ɵfac = function PitchPositionsModalComponent_Factory(t) {\n    return new (t || PitchPositionsModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i3.PositionService));\n  };\n\n  PitchPositionsModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PitchPositionsModalComponent,\n    selectors: [[\"sm-pitch-positions-modal\"]],\n    decls: 60,\n    vars: 2,\n    consts: [[1, \"address-modal\", \"main\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-1\", \"offset-3\"], [\"formControlName\", \"lf\", \"text\", \"LF\", 3, \"click\"], [1, \"col-1\", \"offset-1\"], [\"formControlName\", \"cf\", \"text\", \"CF\"], [1, \"col-1\"], [\"formControlName\", \"st\", \"text\", \"ST\"], [\"formControlName\", \"rf\", \"text\", \"RF\"], [\"id\", \"spacer-row-1\", 1, \"row\"], [1, \"col-1\", \"offset-1\", \"double-column\"], [\"formControlName\", \"lw\", \"text\", \"LW\", 1, \"three-letters\"], [1, \"col-1\", \"offset-8\"], [\"formControlName\", \"rw\", \"text\", \"RW\"], [\"id\", \"spacer-row-2\", 1, \"row\"], [1, \"col-2\", \"offset-5\", \"double-column\"], [\"formControlName\", \"cam\", \"text\", \"CAM\", 1, \"three-letters\"], [\"id\", \"spacer-row-3\", 1, \"row\"], [\"formControlName\", \"lm\", \"text\", \"LM\"], [1, \"col-2\", \"offset-1\", \"double-column\"], [\"formControlName\", \"cm\", \"text\", \"CM\"], [\"formControlName\", \"rm\", \"text\", \"RM\"], [\"id\", \"spacer-row-4\", 1, \"row\"], [\"formControlName\", \"lwb\", \"text\", \"LWB\", 1, \"three-letters\"], [1, \"col-2\", \"offset-3\", \"double-column\"], [\"formControlName\", \"cdm\", \"text\", \"CDM\", 1, \"three-letters\"], [\"formControlName\", \"rwb\", \"text\", \"RWB\", 1, \"three-letters\"], [\"id\", \"spacer-row-5\", 1, \"row\"], [1, \"col-1\", \"offset-2\"], [\"formControlName\", \"lb\", \"text\", \"LB\"], [1, \"col-2\", \"offset-2\", \"double-column\"], [\"formControlName\", \"cb\", \"text\", \"CB\"], [\"formControlName\", \"rb\", \"text\", \"RB\"], [\"id\", \"spacer-row-6\", 1, \"row\"], [\"formControlName\", \"sw\", \"text\", \"SW\"], [\"id\", \"spacer-row-7\", 1, \"row\"], [\"formControlName\", \"g\", \"text\", \"G\"], [1, \"form-group\", \"commands\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", \"value\", \"Submit\", \"color\", \"warn\", 3, \"disabled\"], [\"mat-raised-button\", \"\", \"type\", \"button\", 3, \"click\"]],\n    template: function PitchPositionsModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function PitchPositionsModalComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"sm-checkbox\", 3);\n        i0.ɵɵlistener(\"click\", function PitchPositionsModalComponent_Template_sm_checkbox_click_3_listener() {\n          return ctx.onClick(\"lf\");\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelement(5, \"sm-checkbox\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵelement(7, \"sm-checkbox\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵelement(9, \"sm-checkbox\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(10, \"div\", 9);\n        i0.ɵɵelementStart(11, \"div\", 1)(12, \"div\", 10);\n        i0.ɵɵelement(13, \"sm-checkbox\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 12);\n        i0.ɵɵelement(15, \"sm-checkbox\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(16, \"div\", 14);\n        i0.ɵɵelementStart(17, \"div\", 1)(18, \"div\", 15);\n        i0.ɵɵelement(19, \"sm-checkbox\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(20, \"div\", 17);\n        i0.ɵɵelementStart(21, \"div\", 1)(22, \"div\", 2);\n        i0.ɵɵelement(23, \"sm-checkbox\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 19);\n        i0.ɵɵelement(25, \"sm-checkbox\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 4);\n        i0.ɵɵelement(27, \"sm-checkbox\", 21);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(28, \"div\", 22);\n        i0.ɵɵelementStart(29, \"div\", 1)(30, \"div\", 4)(31, \"sm-checkbox\", 23);\n        i0.ɵɵtext(32, \"LWB\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"div\", 24)(34, \"sm-checkbox\", 25);\n        i0.ɵɵtext(35, \"CDM\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"div\", 2)(37, \"sm-checkbox\", 26);\n        i0.ɵɵtext(38, \"RWB\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(39, \"div\", 27);\n        i0.ɵɵelementStart(40, \"div\", 1)(41, \"div\", 28);\n        i0.ɵɵelement(42, \"sm-checkbox\", 29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 30);\n        i0.ɵɵelement(44, \"sm-checkbox\", 31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"div\", 28);\n        i0.ɵɵelement(46, \"sm-checkbox\", 32);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(47, \"div\", 33);\n        i0.ɵɵelementStart(48, \"div\", 1)(49, \"div\", 15);\n        i0.ɵɵelement(50, \"sm-checkbox\", 34);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(51, \"div\", 35);\n        i0.ɵɵelementStart(52, \"div\", 1)(53, \"div\", 15);\n        i0.ɵɵelement(54, \"sm-checkbox\", 36);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(55, \"section\", 37)(56, \"button\", 38);\n        i0.ɵɵtext(57, \"Update\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"button\", 39);\n        i0.ɵɵlistener(\"click\", function PitchPositionsModalComponent_Template_button_click_58_listener() {\n          return ctx.onClose();\n        });\n        i0.ɵɵtext(59, \"Close\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(56);\n        i0.ɵɵproperty(\"disabled\", true);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.CheckboxComponent, i1.NgControlStatus, i1.FormControlName],\n    styles: [\".main[_ngcontent-%COMP%]{background-image:url(soccer-pitch-vertical.jpg);background-repeat:no-repeat;background-size:contain;display:block;max-height:750px;max-width:500px;width:auto;height:750px;padding-top:90px}.row[_ngcontent-%COMP%]{margin-bottom:20px}[class^=col][_ngcontent-%COMP%]{padding-left:6px}.double-column[_ngcontent-%COMP%]{padding-left:26px}#spacer-row-1[_ngcontent-%COMP%]{margin-bottom:15px}#spacer-row-2[_ngcontent-%COMP%]{margin-bottom:4px}#spacer-row-6[_ngcontent-%COMP%]{margin-bottom:0}\"]\n  });\n  return PitchPositionsModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroupDirective, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CountryService } from '../../../../services/country.service';\nimport { StateService } from '../../../../services/state.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../../../services/country.service\";\nimport * as i5 from \"../../../../services/state.service\";\nimport * as i6 from \"@angular/material/expansion\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\n\nfunction AddressCreateComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\")(1, \"strong\");\n    i0.ɵɵtext(2, \"Input required \");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AddressCreateComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\")(1, \"strong\");\n    i0.ɵɵtext(2, \"Input must be less than 100 characters \");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AddressCreateComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\")(1, \"strong\");\n    i0.ɵɵtext(2, \"Input must be less than 100 characters \");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AddressCreateComponent_mat_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const country_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", country_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", country_r9.text, \" \");\n  }\n}\n\nfunction AddressCreateComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\")(1, \"strong\");\n    i0.ɵɵtext(2, \"Input required\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AddressCreateComponent_section_26_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const state_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", state_r12.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", state_r12.text, \" \");\n  }\n}\n\nfunction AddressCreateComponent_section_26_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\")(1, \"strong\");\n    i0.ɵɵtext(2, \"Input required\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AddressCreateComponent_section_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 7)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"State:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-select\", 14);\n    i0.ɵɵtemplate(4, AddressCreateComponent_section_26_mat_option_4_Template, 2, 2, \"mat-option\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AddressCreateComponent_section_26_mat_error_5_Template, 3, 0, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.states);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.form.controls.address.get(\"stateId\").hasError(\"required\") && (ctx_r5.form.controls.address.get(\"stateId\").dirty || ctx_r5.form.controls.address.get(\"stateId\").touched));\n  }\n}\n\nfunction AddressCreateComponent_mat_error_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\")(1, \"strong\");\n    i0.ɵɵtext(2, \"Input required \");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AddressCreateComponent_mat_error_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\")(1, \"strong\");\n    i0.ɵɵtext(2, \"Input must be less than 100 characters \");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AddressCreateComponent_mat_error_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\")(1, \"strong\");\n    i0.ɵɵtext(2, \"Input must be a positive whole number less than 10 digits long \");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let AddressCreateComponent = /*#__PURE__*/(() => {\n  class AddressCreateComponent {\n    //#endregion\n    //#region Constructor\n    constructor(activatedRoute, router, http, baseUrl, formBuilder, rootFormGroup, countryService, stateService) {\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n      this.http = http;\n      this.baseUrl = baseUrl;\n      this.formBuilder = formBuilder;\n      this.rootFormGroup = rootFormGroup;\n      this.countryService = countryService;\n      this.stateService = stateService; //#region Properties\n\n      this.formGroupName = 'address';\n      this.isReadonly = false;\n      this.subscriptions = new Array();\n      this.form = this.rootFormGroup.control;\n      this.form.addControl(this.formGroupName, this._buildForm());\n    } //#endregion\n    //#region Event\n\n\n    ngOnInit() {\n      //this.address = this.form.get(this.formGroupName) as FormGroup;\n      if (this.isReadonly) this._disableForm();\n\n      this._getCountries();\n\n      this._createControlReferences();\n    }\n\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe);\n      }\n    }\n\n    onCountryChange(countryId) {\n      if (countryId === 237 && this.states == null) {\n        this._getStates(countryId);\n      }\n    } //#endregion\n    //#region Methods\n\n\n    _buildForm() {\n      const unsignedIntPattern = new RegExp('^[1-9]\\\\d{0,8}$');\n      return this.formBuilder.group({\n        addressLine1: ['', [Validators.required, Validators.maxLength(100)]],\n        addressLine2: ['', [Validators.maxLength(100)]],\n        city: ['', [Validators.required, Validators.maxLength(100)]],\n        countryId: ['', [Validators.required]],\n        stateId: ['', [Validators.required]],\n        zipCode: ['', [Validators.pattern(unsignedIntPattern)]]\n      });\n    }\n\n    _createControlReferences() {\n      this.controls = {\n        addressLine1: this.form.controls.address.get('addressLine1'),\n        addressLine2: this.form.controls.address.get('addressLine2'),\n        city: this.form.controls.address.get('city'),\n        countryId: this.form.controls.address.get('countryId'),\n        stateId: this.form.controls.address.get('stateId'),\n        zipCode: this.form.controls.address.get('zipCode')\n      };\n    }\n\n    _disableForm() {\n      this.isReadonly = true;\n      this.form.disable();\n    }\n\n    _enableForm() {\n      this.isReadonly = false;\n      this.form.enable();\n    }\n\n    _getCountries() {\n      if (!this.countries) {\n        this.subscriptions.push(this.countryService.getAll().subscribe(data => this.countries = data, error => this.errorMessage = error));\n      }\n    }\n\n    _getStates(countryId) {\n      if (!this.states) {\n        this.subscriptions.push(this.stateService.getByCountry(countryId).subscribe(data => this.states = data, error => this.errorMessage = error));\n      }\n    }\n\n  }\n\n  AddressCreateComponent.ɵfac = function AddressCreateComponent_Factory(t) {\n    return new (t || AddressCreateComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i3.FormGroupDirective), i0.ɵɵdirectiveInject(i4.CountryService), i0.ɵɵdirectiveInject(i5.StateService));\n  };\n\n  AddressCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddressCreateComponent,\n    selectors: [[\"sm-address-create\"]],\n    inputs: {\n      formGroupName: \"formGroupName\",\n      isReadonly: \"isReadonly\",\n      countries: \"countries\"\n    },\n    decls: 39,\n    vars: 10,\n    consts: [[1, \"container\", 3, \"formGroup\"], [\"hideToggle\", \"\"], [1, \"row\"], [1, \"form-group\"], [\"matInput\", \"\", \"formControlName\", \"addressLine1\", 1, \"form-control\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"addressLine2\", 1, \"form-control\"], [1, \"form-group\", \"col\"], [\"formControlName\", \"countryId\", 1, \"form-control\", 3, \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"form-group col\", 4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"city\", 1, \"form-control\"], [\"matInput\", \"\", \"formControlName\", \"zipCode\", 1, \"form-control\"], [3, \"value\"], [\"formControlName\", \"stateId\", 1, \"form-control\"]],\n    template: function AddressCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-accordion\", 0)(1, \"mat-expansion-panel\", 1)(2, \"mat-expansion-panel-header\")(3, \"mat-panel-title\");\n        i0.ɵɵtext(4, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"mat-panel-description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"section\", 3)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Address Line 1:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 4);\n        i0.ɵɵtemplate(11, AddressCreateComponent_mat_error_11_Template, 3, 0, \"mat-error\", 5);\n        i0.ɵɵtemplate(12, AddressCreateComponent_mat_error_12_Template, 3, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 2)(14, \"section\", 3)(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Address Line 2:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 6);\n        i0.ɵɵtemplate(18, AddressCreateComponent_mat_error_18_Template, 3, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 2)(20, \"section\", 7)(21, \"mat-label\");\n        i0.ɵɵtext(22, \"Country:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"mat-select\", 8);\n        i0.ɵɵlistener(\"selectionChange\", function AddressCreateComponent_Template_mat_select_selectionChange_23_listener($event) {\n          return ctx.onCountryChange($event.value);\n        });\n        i0.ɵɵtemplate(24, AddressCreateComponent_mat_option_24_Template, 2, 2, \"mat-option\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(25, AddressCreateComponent_mat_error_25_Template, 3, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, AddressCreateComponent_section_26_Template, 6, 2, \"section\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 2)(28, \"section\", 7)(29, \"mat-label\");\n        i0.ɵɵtext(30, \"City:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 11);\n        i0.ɵɵtemplate(32, AddressCreateComponent_mat_error_32_Template, 3, 0, \"mat-error\", 5);\n        i0.ɵɵtemplate(33, AddressCreateComponent_mat_error_33_Template, 3, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"section\", 7)(35, \"mat-label\");\n        i0.ɵɵtext(36, \"Zip Code:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"input\", 12);\n        i0.ɵɵtemplate(38, AddressCreateComponent_mat_error_38_Template, 3, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.address);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.controls.address.hasError(\"required\") && (ctx.form.controls.address.get(\"addressLine1\").dirty || ctx.form.controls.address.get(\"addressLine1\").touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.address.get(\"addressLine1\").hasError(\"maxlength\") && (ctx.form.controls.address.get(\"addressLine1\").dirty || ctx.form.controls.address.get(\"addressLine1\").touched));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.address.get(\"addressLine2\").hasError(\"maxlength\") && (ctx.form.controls.address.get(\"addressLine2\").dirty || ctx.form.controls.address.get(\"addressLine2\").touched));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.countries);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.address.get(\"countryId\").hasError(\"required\") && (ctx.form.controls.address.get(\"countryId\").dirty || ctx.form.controls.address.get(\"countryId\").touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.address.get(\"countryId\").value === 237);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.address.get(\"city\").hasError(\"required\") && (ctx.form.controls.address.get(\"city\").dirty || ctx.form.controls.address.get(\"city\").touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.address.get(\"city\").hasError(\"maxlength\") && (ctx.form.controls.address.get(\"city\").dirty || ctx.form.controls.address.get(\"city\").touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.address.get(\"zipCode\").hasError(\"pattern\") && (ctx.form.controls.address.get(\"zipCode\").dirty || ctx.form.controls.address.get(\"zipCode\").touched));\n      }\n    },\n    directives: [i6.MatAccordion, i3.NgControlStatusGroup, i3.FormGroupDirective, i6.MatExpansionPanel, i6.MatExpansionPanelHeader, i6.MatExpansionPanelTitle, i6.MatExpansionPanelDescription, i7.MatLabel, i8.MatInput, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i9.NgIf, i7.MatError, i10.MatSelect, i9.NgForOf, i11.MatOption],\n    styles: [\"input.ng-valid[_ngcontent-%COMP%]{border-left:5px solid green}input.ng-invalid.ng-dirty[_ngcontent-%COMP%], input.ng-invalid.ng-touched[_ngcontent-%COMP%]{border-left:5px solid red}input.ng-valid[_ngcontent-%COMP%] ~ .valid-feedback[_ngcontent-%COMP%], input.ng-invalid[_ngcontent-%COMP%] ~ .invalid-feedback[_ngcontent-%COMP%]{display:block}mat-form-field[_ngcontent-%COMP%]{width:100%}.mat-raised-button[_ngcontent-%COMP%]{margin-right:20px}\"]\n  });\n  return AddressCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
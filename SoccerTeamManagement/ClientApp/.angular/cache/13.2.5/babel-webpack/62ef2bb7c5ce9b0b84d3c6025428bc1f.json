{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { PlayerService } from '../../../../services/player.service';\nimport { CountryService } from '../../../../services/country.service';\nimport { ImageService } from '../../../../services/image.service';\nimport { DetailsBaseComponent } from '../../../base/details-base/details-base.component';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { AddressModalComponent } from '../../../shared/address/modal/address-modal.component';\nimport { AddressService } from '../../../../services/address.service';\nlet PlayerDetailsComponent = class PlayerDetailsComponent extends DetailsBaseComponent {\n  //#endregion\n  //#region Constructor\n  constructor(route, router, formBuilder, dialog, playerService, countryService, imageService, addressService) {\n    super(\"Player\", \"/players\", route, playerService, router);\n    this.route = route;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.dialog = dialog;\n    this.playerService = playerService;\n    this.countryService = countryService;\n    this.imageService = imageService;\n    this.addressService = addressService;\n    this.entity = {};\n    this.entity.address = {};\n    this.image = {};\n    this.imageFile = null;\n  } //#endregion\n  //#region Events\n\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._getCountries();\n  }\n\n  onFileSelected(event) {\n    this.imageFile = event.target.files[0];\n  }\n\n  onImageUpload() {\n    this.subscriptions.push(this.imageService.create(this.image, this.imageFile).subscribe(data => this.image.id = data, error => this.errorMessage = error));\n  } //#endregion\n  //#region Methods\n\n\n  openModal() {\n    const dialog = this.dialog.open(AddressModalComponent, this._getAddressModalConfig(this.form.get('address')));\n    this.subscriptions.push(dialog.afterClosed().subscribe(result => {\n      if (result) {\n        this.form.get('address').setValue(result === null || result === void 0 ? void 0 : result.data);\n        console.log(\"Address after modal: \" + JSON.stringify(this.form.value, null, 2));\n      }\n    }));\n  }\n\n  initializeControlReferences() {\n    return {\n      firstName: this.form.get('firstName'),\n      lastName: this.form.get('lastName'),\n      nickName: this.form.get('nickName'),\n      height: this.form.get('height'),\n      weight: this.form.get('weight'),\n      foot: this.form.get('foot'),\n      flareRating: this.form.get('flareRating'),\n      countryId: this.form.get('countryId'),\n      readOnly: this.form.get('readOnly'),\n      dateOfBirth: this.form.get('dateOfBirth'),\n      phone: {\n        countryCode: this.form.controls.phone.get(\"countryCode\"),\n        areaCode: this.form.controls.phone.get(\"areaCode\"),\n        extension: this.form.controls.phone.get('extension'),\n        number: this.form.controls.phone.get('number'),\n        phoneType: this.form.controls.phone.get('phoneType')\n      },\n      address: this.form.get('address')\n    };\n  }\n\n  initializeForm() {\n    const unsignedInt999Pattern = new RegExp('^[1-9]\\\\d{0,2}$');\n    const unsignedIntPattern = new RegExp('^[1-9]\\\\d{0,8}$');\n    return this.formBuilder.group({\n      id: [null],\n      firstName: ['', [Validators.required, Validators.maxLength(100)]],\n      lastName: ['', [Validators.required, Validators.maxLength(100)]],\n      nickName: ['', [Validators.maxLength(100)]],\n      height: [null, [Validators.min(0), Validators.max(999), Validators.pattern(unsignedInt999Pattern)]],\n      weight: [null, [Validators.min(0), Validators.max(9999), Validators.pattern(unsignedInt999Pattern)]],\n      foot: ['', [Validators.required]],\n      weakFootRating: [null],\n      flareRating: [null, [Validators.required]],\n      countryId: [null, [Validators.required]],\n      dateOfBirth: [null, [Validators.required]],\n      attributesId: [null],\n      phoneId: [null],\n      addressId: [null],\n      imageId: [null],\n      phone: this.formBuilder.group({\n        id: [null],\n        countryCode: ['', [Validators.required, Validators.pattern(unsignedIntPattern)]],\n        areaCode: ['', [Validators.required, Validators.pattern(unsignedIntPattern)]],\n        extension: ['', [Validators.pattern(unsignedIntPattern)]],\n        number: ['', [Validators.required, Validators.pattern(unsignedIntPattern)]],\n        phoneType: ['', [Validators.required]]\n      }),\n      address: this.addressService.getFormGroup()\n      /*//Photo\r\n      image: new FormControl('', Validators.required),\r\n      //Attributes\r\n      //Teams\r\n      teams: new FormControl('', Validators.required),\r\n      positions: new FormControl('', Validators.required),\r\n      parents: new FormControl('', Validators.required)*/\n\n    });\n  }\n\n  _deleteImage() {\n    this.subscriptions.push(this.imageService.delete(+this.image.id).subscribe(data => data, error => this.errorMessage = error));\n  }\n\n  _getCountries() {\n    if (!this.countries) {\n      this.subscriptions.push(this.countryService.getAll().subscribe(data => this.countries = data, error => this.errorMessage = error));\n    }\n  }\n\n  _getAddressModalConfig(data) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.disableClose = true; //dialogConfig.height = \"450px\";\n\n    dialogConfig.width = \"60%\";\n    dialogConfig.data = data;\n    return dialogConfig;\n  }\n\n};\nPlayerDetailsComponent = __decorate([Component({\n  selector: 'sm-player-details',\n  templateUrl: './player-details.component.html',\n  styleUrls: ['./player-details.component.scss']\n}), __metadata(\"design:paramtypes\", [ActivatedRoute, Router, FormBuilder, MatDialog, PlayerService, CountryService, ImageService, AddressService])], PlayerDetailsComponent);\nexport { PlayerDetailsComponent };","map":null,"metadata":{},"sourceType":"module"}